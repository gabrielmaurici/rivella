@page "/criar-album"

@using Rivella.Blazor.Services.Album.CreateAlbum

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject ICreateAlbumService CreateAlbumService

@if (!IsLoaded)
{
    <div class="loading">
        <p>Criando álbum...</p>
    </div>
} 
else
{
    <div class="main-container">
        <div class="create-album-container">
            <h2>Criação de Álbum</h2>
            <p>Preencha os campos abaixo para criar seu álbum e definir a data de revelação.</p>

            <EditForm Model="@_albumModel" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="albumName">Nome do Álbum</label>
                    <InputText id="albumName" class="form-control" @bind-Value="_albumModel.Name" />
                </div>

                <div class="form-group">
                    <label for="revelationDate">Data de Revelação</label>
                    <InputDate 
                        id="revelationDate"
                        class="form-control"
                        Type="InputDateType.DateTimeLocal"
                        min="@DateTime.Today.ToString("dd-MM-yyyy")"
                        @bind-Value="@_albumModel.RevelationDate"
                    />
                </div>

                <button type="submit" class="btn-primary">Criar Álbum</button>
            </EditForm>
        </div>
    </div>
}

@code {
    private readonly CreateAlbumModel _albumModel = new();
    private bool IsLoaded { get; set; } = true;
    
    private async Task HandleSubmit()
    {
        try
        {
            IsLoaded = true;
            var result = await CreateAlbumService.CreateAsync(_albumModel);
            NavigationManager.NavigateTo($"/album/{result.Code}");
        }
        catch (Exception ex)
        {
            var erro = $"Erro ao criar álbum: {ex.Message}";
            Console.WriteLine(erro);
            await JsRuntime.InvokeVoidAsync("alert", erro);
        }
        finally
        {
            IsLoaded = false;
        }
    }
}